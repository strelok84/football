{"version":3,"sources":["components/Loader/Loader.js","components/Table/Table.js","components/Teams/Teams.js","components/MathesOfTeam/MatchesOfTeam.js","components/MatchesOfLigue/MatchesOfLigue.js","App.js","reportWebVitals.js","index.js"],"names":["className","Table","state","isLoading","data","id","year","searchName","request","url","fetch","headers","event","setState","prevState","target","value","searchBar","preventDefault","match","alert","table","document","getElementById","reg","RegExp","found","i","rows","length","test","cells","innerHTML","scrollIntoView","classList","remove","this","response","json","competitions","sessionStorage","clear","localStorage","setItem","props","history","push","pathname","ligueId","freeLigues","onSubmit","type","onChange","placeholder","map","item","includes","name","href","onClick","e","handleClick","matchesOfLigue","React","Component","Teams","handleChange","handleSubmit","componentDidMount","getItem","location","teamYear","window","pushState","ok","teams","competition","area","matchid","Matches","dateFrom","dateTo","setDateFrom","setDateTo","searchDate","matchId","matches","homeTeam","awayTeam","utcDate","Date","now","Intl","DateTimeFormat","resolvedOptions","timeZone","toLocaleString","MatchesOfLigue","componentWillUnmount","withRouter","App","path","component","MatchesOfTeam","exact","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.cc8b8fab.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.css';\n\nexport default () => <div className=\"lds-hourglass\" />\n","import React from \"react\";\nimport Loader from \"../Loader/Loader\";\n\n//главная страница - список всех лиг. На бесплатном аккаунте API доступны только 12 лиг, поэтому оставил только их.\n/*Не очень понятно требование ТЗ иметь на этой странице поиск по году, т.к API запрос ко всем лигам и год не поддерживает\n  Да и по смыслу это странно - список лиг, существовавших в определенный год? Так что поиск только по названию лиги.\n*/\n\nclass Table extends React.Component {\n  state = {\n    isLoading: true,\n    data: [],\n    id: 0,\n    year: \"\",\n    searchName: \"\",\n  };\n\n  async componentDidMount(year) {\n    const url = `https://fathomless-spire-81147.herokuapp.com/https://api.football-data.org/v2/competitions`;\n    const response = await this.request(url);\n    const data = await response.json();\n    this.setState({\n      isLoading: false,\n      data: data.competitions,\n    });\n    sessionStorage.clear();\n  }\n\n  //Запрос к football-data.org списка всех лиг\n  request = (url) => {\n    return fetch(url, {\n      headers: { \"X-Auth-Token\": \"a3b3685ba5fd4c8685be0540c85652f2\" },\n    });\n  };\n\n  /*обработчик клика по строке \"команды лиги\", localstorage нужен ибо gh-pages криво работает с роутингом SPA (при обновлении страницы вываливаются в 404), \n  на нормальном хостинге это не нужно*/\n\n  handleClick(event, id) {\n    event.preventDefault();\n    localStorage.setItem(\"id\", id);\n    \n    this.props.history.push({\n      pathname: \"/teams\",\n      state: { id: id },\n    });\n  }\n\n  // клик по строке \"календарь лиги\"\n\n  matchesOfLigue(event, ligueId) {\n    event.preventDefault();\n    localStorage.setItem(\"ligueId\", ligueId);\n    this.props.history.push({\n      pathname: \"/matchesOfLigue\",\n      state: { ligueId: ligueId },\n    });\n  }\n\n  //обработчик введенного пользователем значения названия лиги в строке поиска\n\n  searchName = (event) => {\n    this.setState((prevState) => ({\n      searchName: event.target.value,\n    }));\n  };\n\n  /*введенное пользователем имя лиги ищется в ячейках с названиями по регулярному выражению.\n  Совпадения выделяются, экран прокручивается до выделенного значения*/\n\n  searchBar = (event) => {\n    event.preventDefault();\n    const searchName = this.state.searchName;\n    if (!searchName.match(/\\S/)) {\n      return alert(\"Введите название или часть названия\");\n    }\n    const table = document.getElementById(\"table\");\n    let reg = new RegExp(searchName, \"gi\");\n    let found = false;\n    for (let i = 1; i < table.rows.length; i++) {\n      if (reg.test(table.rows[i].cells[0].innerHTML)) {\n        found = true;\n        table.rows[i].cells[0].className += \" foundCell\";\n        table.rows[i].scrollIntoView();\n      } else {\n        table.rows[i].cells[0].classList.remove(\"foundCell\");\n      }\n    }\n    if (!found) {\n      alert(\"Такой лиги в списке нет. Введите название или часть названия.\");\n    }\n  };\n\n  render() {\n    //id доступных лиг\n    const freeLigues = [\n      2001,\n      2017,\n      2021,\n      2003,\n      2002,\n      2015,\n      2019,\n      2014,\n      2016,\n      2013,\n      2000,\n      2018,\n    ];\n\n    return (\n      <div className=\"container\">\n        <form className=\"form-inline m-3\" onSubmit={this.searchBar}>\n          <input\n            className=\"form-control\"\n            type=\"search\"\n            onChange={this.searchName}\n            placeholder=\"Название команды\"\n          />\n          <input type=\"submit\" className=\"btn btn-primary m-3\" value=\"Найти\" />\n        </form>\n        {/*  Лоадер крутится пока подгружаются данные. Ф-ия берет данные формирует таблицу. Поля не из бесплатных id скрываются.\n        В качестве key для map используется id лиги или команды.*/}\n        {this.state.isLoading ? (\n          <Loader />\n        ) : (\n          <table className=\"table\" id=\"table\">\n            <thead>\n              <tr>\n                <th>Название лиги</th>\n                <th>Команды лиги</th>\n                <th>Календарь лиги</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.data.map((item) => (\n                <tr key={item.id}>\n                  {freeLigues.includes(item.id) ? (\n                    <td>{item.name}</td>\n                  ) : (\n                    <td className=\"hiddenTd\">Недоступно</td>\n                  )}\n                  {freeLigues.includes(item.id) ? (\n                    <td>\n                      <a\n                        href=\"./teams\"\n                        onClick={(e) => this.handleClick(e, item.id)}\n                      >\n                        Команды лиги\n                      </a>\n                    </td>\n                  ) : (\n                    <td className=\"hiddenTd\">Недоступно</td>\n                  )}\n                  {freeLigues.includes(item.id) ? (\n                    <td>\n                      <a\n                        href=\"./matchesOfLigue\"\n                        onClick={(e) => this.matchesOfLigue(e, item.id)}\n                      >\n                        Календарь лиги\n                      </a>\n                    </td>\n                  ) : (\n                    <td className=\"hiddenTd\">Недоступно</td>\n                  )}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n}\n//Остальные компоненты устроены примерно аналогично\nexport default Table;\n","import React from \"react\";\nimport Loader from \"../Loader/Loader\";\n\n/*\nСписок команд лиги. По умолчанию показывается список на 2020 год. Можно вывести список за другой год (если год не поддерживается - выводит \"нет данных\"). \nЕсть поиск названия команды в списке.\n*/\nclass Teams extends React.Component {\n  state = {\n    isLoading: true,\n    data: [],\n    year: 0,\n    searchName: \"\",\n    name: \"\",\n  };\n\n  async componentDidMount(year) {\n    let id = localStorage.getItem(\"id\") || this.props.location.state.id;\n    let teamYear = sessionStorage.getItem(\"teamYear\") || this.state.year;\n    const url = `http://api.football-data.org/v2/competitions/${id}/teams?season=${\n      +teamYear ? teamYear : 2020\n    }`;\n    const response = await this.request(url);\n\n    if (+teamYear) {\n      window.history.pushState(null, null, \"teams?\" + teamYear);\n    }\n\n    if (response.ok) {\n      const data = await response.json();\n      this.setState({\n        isLoading: false,\n        data: data.teams,\n        name: data.competition.name,\n      });\n    } else {\n      this.setState({\n        isLoading: false,\n        data: [\n          {\n            id: \"Нет данных\",\n            name: \"Нет данных\",\n            area: { name: \"Доступны данные только за 750 дней\" },\n          },\n        ],\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    sessionStorage.clear();\n  }\n\n  request = (url) => {\n    return fetch(url, {\n      headers: { \"X-Auth-Token\": \"a3b3685ba5fd4c8685be0540c85652f2\" },\n    });\n  };\n\n  // обработчик перехода на страницу календаря конкретной команды\n  handleClick(e, matchid) {\n    e.preventDefault();\n    localStorage.setItem(\"matchId\", matchid);\n    this.props.history.push({\n      pathname: \"/matchesOfTeam\",\n      state: { matchid: matchid },\n    });\n  }\n\n  handleChange = (event) => {\n    this.setState({ year: event.target.value });\n    sessionStorage.setItem(\"teamYear\", event.target.value);\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.componentDidMount(this.state.year);\n  };\n\n  searchName = (event) => {\n    this.setState({ searchName: event.target.value });\n  };\n\n  searchBar = (event) => {\n    event.preventDefault();\n    const searchName = this.state.searchName;\n    if (!searchName.match(/\\S/)) {\n      return alert(\"Введите название или часть названия\");\n    }\n    const table = document.getElementById(\"table\");\n    let reg = new RegExp(searchName, \"gi\");\n    let found = false;\n    for (let i = 1; i < table.rows.length; i++) {\n      if (reg.test(table.rows[i].cells[0].innerHTML)) {\n        found = true;\n        table.rows[i].cells[0].className += \" foundCell\";\n        table.rows[i].scrollIntoView();\n      } else {\n        table.rows[i].cells[0].classList.remove(\"foundCell\");\n      }\n    }\n    if (!found) {\n      alert(\"Такой лиги в списке нет. Введите название или часть названия.\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"mt-2 mb-2\">\n          <a className=\"mr-3\" href=\"https://strelok84.github.io/football/\">\n            Главная страница\n          </a>\n          <span>{\"\\u00B7\"}</span>\n          <span className=\"ml-3\">Команды лиги</span>\n        </div>\n        <div className=\"grid\">\n          <form onSubmit={this.searchBar} className=\"teamName\">\n            <div className=\"form-group\">\n              <label>\n                Название:\n                <input\n                  className=\"form-control\"\n                  type=\"search\"\n                  onChange={this.searchName}\n                  placeholder=\"Название команды\"\n                />\n              </label>\n              <input\n                className=\"btn btn-primary ml-3\"\n                type=\"submit\"\n                value=\"Найти\"\n              />\n            </div>\n          </form>\n\n          <form onSubmit={this.handleSubmit} className=\"teamYear\">\n            <div className=\"form-group\">\n              <label>\n                Год:\n                <input\n                  className=\"form-control\"\n                  type=\"number\"\n                  value={this.state.value}\n                  onChange={this.handleChange}\n                  placeholder={sessionStorage.getItem(\"teamYear\") || \"2020\"}\n                />\n              </label>\n              <input\n                className=\"btn btn-primary ml-3\"\n                type=\"submit\"\n                value=\"Найти\"\n              />\n            </div>\n          </form>\n          <div className=\"ligueName\">\n            <h1>{this.state.name}</h1>\n          </div>\n        </div>\n        {this.state.isLoading ? (\n          <Loader />\n        ) : (\n          <table className=\"table\" id=\"table\">\n            <thead>\n              <tr>\n                <th>Команда</th>\n                <th>Страна</th>\n                <th>Календарь команды</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.data.map((item) => (\n                <tr key={item.id}>\n                  <td>{item.name}</td>\n                  <td>{item.area.name}</td>\n                  <td>\n                    {this.state.data[0].id !== \"Нет данных\" ? (\n                      <a\n                        href=\"./teams\"\n                        onClick={(e) => this.handleClick(e, item.id)}\n                      >\n                        Календарь команды\n                      </a>\n                    ) : (\n                      \"Доступны данные только за 750 дней\"\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Teams;\n","import React from \"react\";\nimport Loader from \"../Loader/Loader\";\n/*\nКалендарь конкретной команды. По умолчанию выводятся будущие матчи. \nМожно вывести матчи за конкретный период (если период недоступен - выводит соответствующую надпись).\nВведенные данные сохраняются в sessionStorage, при обновлении страницы соответственно результаты поиска не теряются\n\nЕсть поиск по названию команды.\n*/\n\nclass Matches extends React.Component {\n  state = {\n    isLoading: true,\n    data: [],\n    dateFrom: \"\",\n    dateTo: \"\",\n  };\n\n  async componentDidMount() {\n    let response;\n    let matchid =\n      localStorage.getItem(\"matchId\") || this.props.location.state.matchId;\n    let dateTo = sessionStorage.getItem(\"teamDateTo\") || this.state.dateTo;\n    let dateFrom =\n      sessionStorage.getItem(\"teamDateFrom\") || this.state.dateFrom;\n    const url = `https://api.football-data.org/v2/teams/${matchid}/matches?`;\n\n    if (!dateFrom && !dateTo) {\n      response = await this.request(`${url}status=SCHEDULED`);\n    } else if ((!dateFrom && dateTo) || (dateFrom && !dateTo)) {\n      alert(\"Нужно ввести обе даты\");\n      response = await this.request(`${url}status=SCHEDULED`);\n    } else {\n      response = await this.request(\n        `${url}dateTo=${dateTo}&dateFrom=${dateFrom}`\n      );\n\n      window.history.pushState(\n        null,\n        null,\n        \"matches?\" + dateFrom + \"--\" + dateTo\n      );\n    }\n\n    const data = await response.json();\n\n    if (response.ok) {\n      this.setState({\n        isLoading: false,\n        data: data.matches,\n      });\n    } else {\n      this.setState({\n        isLoading: false,\n        data: [\n          {\n            homeTeam: { name: \"Нет данных в этом диапазоне\" },\n            awayTeam: { name: \"доступны данные только за последние 750 дней\" },\n            id: \"Нет данных\",\n            utcDate: Date.now(),\n          },\n        ],\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    sessionStorage.clear();\n  }\n\n  request = (url) => {\n    return fetch(url, {\n      headers: { \"X-Auth-Token\": \"a3b3685ba5fd4c8685be0540c85652f2\" },\n    });\n  };\n\n  setDateFrom = (event) => {\n    this.setState({ dateFrom: event.target.value });\n    sessionStorage.setItem(\"teamDateFrom\", event.target.value);\n  };\n  setDateTo = (event) => {\n    this.setState({ dateTo: event.target.value });\n    sessionStorage.setItem(\"teamDateTo\", event.target.value);\n  };\n\n  searchDate = (event) => {\n    event.preventDefault();\n    this.componentDidMount();\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"mt-2 mb-2\">\n          <a className=\"mr-3\" href=\"https://strelok84.github.io/football/\">\n            Главная страница\n          </a>\n          <span>{\"\\u00B7\"}</span>\n          <a\n            href=\"https://strelok84.github.io/football/teams\"\n            className=\"ml-3 mr-3\"\n          >\n            Команды лиги\n          </a>\n          <span>{\"\\u00B7\"}</span>\n          <span className=\"ml-3\">Календарь команды</span>\n        </div>\n\n        <form className=\"form-inline mt-3\" onSubmit={this.searchDate}>\n          <label>\n            От:\n            <input\n              className=\"form-control ml-1 mr-3\"\n              type=\"date\"\n              onChange={this.setDateFrom}\n            />\n          </label>\n        </form>\n        <form className=\"form-inline mt-2 mb-3\" onSubmit={this.searchDate}>\n          <label>\n            До:\n            <input\n              className=\"form-control ml-1 mr-3 \"\n              type=\"date\"\n              onChange={this.setDateTo}\n            />\n          </label>\n          <input\n            className=\"form-control btn btn-primary\"\n            type=\"submit\"\n            value=\"Найти\"\n          />\n        </form>\n\n        {this.state.isLoading ? (\n          <Loader />\n        ) : (\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Матч</th>\n                <th>\n                  Дата матча по времени{\" \"}\n                  {Intl.DateTimeFormat().resolvedOptions().timeZone}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.data.map((item) => (\n                <tr key={item.id}>\n                  <td>\n                    {item.homeTeam.name} - {item.awayTeam.name}\n                  </td>\n                  <td>{new Date(item.utcDate).toLocaleString()}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Matches;\n","import React from \"react\";\nimport Loader from \"../Loader/Loader\";\nimport { withRouter } from \"react-router-dom\";\n\n// Календарь лиги - список матчей лиги. По умолчанию показаны будущие матчи.\n//Есть поиск матчей за конкретный период. Введенные данные сохраняются в sessionStorage, при обновлении страницы соответственно результаты поиска не теряются\n\nclass MatchesOfLigue extends React.Component {\n  state = {\n    isLoading: true,\n    data: [],\n    dateFrom: \"\",\n    dateTo: \"\",\n  };\n\n  async componentDidMount() {\n    let id =\n      localStorage.getItem(\"ligueId\") || this.props.location.state.ligueId;\n    let dateTo = sessionStorage.getItem(\"dateTo\") || this.state.dateTo;\n    let dateFrom = sessionStorage.getItem(\"dateFrom\") || this.state.dateFrom;\n    let response;\n    const url = `https://api.football-data.org/v2/competitions/${id}/matches?`;\n    if (!dateFrom && !dateTo) {\n      response = await this.request(`${url}status=SCHEDULED`);\n    } else if ((!dateFrom && dateTo) || (dateFrom && !dateTo)) {\n      alert(\"Нужно ввести обе даты\");\n      response = await this.request(`${url}status=SCHEDULED`);\n    } else {\n      response = await this.request(\n        `${url}dateTo=${dateTo}&dateFrom=${dateFrom}`\n      );\n\n      window.history.pushState(\n        null,\n        null,\n        \"matchesOfLigue?\" + dateFrom + \"--\" + dateTo\n      );\n    }\n\n    const data = await response.json();\n\n    this.setState({\n      isLoading: false,\n      data: data.matches,\n    });\n  }\n\n  componentWillUnmount = () => {\n    sessionStorage.clear();\n  };\n\n  request = (url) => {\n    return fetch(url, {\n      headers: { \"X-Auth-Token\": \"a3b3685ba5fd4c8685be0540c85652f2\" },\n    });\n  };\n\n  setDateFrom = (event) => {\n    this.setState({ dateFrom: event.target.value });\n    sessionStorage.setItem(\"dateFrom\", event.target.value);\n  };\n  setDateTo = (event) => {\n    this.setState({ dateTo: event.target.value });\n    sessionStorage.setItem(\"dateTo\", event.target.value);\n  };\n  searchDate = (event) => {\n    event.preventDefault();\n    this.componentDidMount();\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"mt-2 mb-2\">\n          <a className=\"mr-3\" href=\"https://strelok84.github.io/football/\">\n            Главная страница\n          </a>\n          <span>{\"\\u00B7\"}</span>\n          <span className=\"ml-3\">Календарь лиги</span>\n        </div>\n\n        <form className=\"form-inline mt-3\" onSubmit={this.searchDate}>\n          <label>\n            От:\n            <input\n              className=\"form-control ml-1 mr-3\"\n              type=\"date\"\n              onChange={this.setDateFrom}\n            />\n          </label>\n        </form>\n        <form className=\"form-inline mt-2 mb-3\" onSubmit={this.searchDate}>\n          <label>\n            До:\n            <input\n              className=\"form-control ml-1 mr-3 \"\n              type=\"date\"\n              onChange={this.setDateTo}\n            />\n          </label>\n          <input\n            className=\"form-control btn btn-primary\"\n            type=\"submit\"\n            value=\"Найти\"\n          />\n        </form>\n\n        {this.state.isLoading ? (\n          <Loader />\n        ) : (\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Команды</th>\n                <th>\n                  Дата матча по времени{\" \"}\n                  {Intl.DateTimeFormat().resolvedOptions().timeZone}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.data.map((item) => (\n                <tr key={item.id}>\n                  <td>\n                    {item.homeTeam.name} - {item.awayTeam.name}\n                  </td>\n                  <td>{new Date(item.utcDate).toLocaleString()}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(MatchesOfLigue);\n","import React, { Component } from \"react\";\nimport Table from \"./components/Table/Table\";\nimport Teams from \"./components/Teams/Teams\";\nimport MatchesOfTeam from \"./components/MathesOfTeam/MatchesOfTeam\";\nimport MatchesOfLigue from \"./components/MatchesOfLigue/MatchesOfLigue\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/matchesOfLigue\" component={MatchesOfLigue} />\n          <Route path=\"/matchesOfLigue/:ligueId\" component={MatchesOfLigue} />\n          <Route path=\"/matchesOfTeam\" component={MatchesOfTeam} />\n          <Route path=\"/teams\" component={Teams} />\n          <Route exact path=\"/\" component={Table} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n\n  <BrowserRouter basename=\"/football\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}